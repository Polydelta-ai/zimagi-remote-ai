data_mixins:
    remote_ai_model:
        class: RemoteAIModelMixin
        fields:
            remote_ai_model:
                type: "@django.ForeignKey"
                relation: remote_ai_model
                options:
                    "null": true
                    on_delete: "@django.PROTECT"
                    editable: false

    remote_ai_models:
        class: RemoteAIModelsMixin
        fields:
            remote_ai_models:
                type: "@django.ManyToManyField"
                relation: remote_ai_model

data_base:
    remote_ai_model:
        class: RemoteAIModelBase
        base: resource
        mixins: [remote_ai_model]
        id_fields: [remote_ai_model_id, name]
        meta:
            unique_together: [remote_ai_model, name]
            scope: remote_ai_model

data:
    remote_ai_model:
        class: RemoteAIModel
        base: resource
        mixins: [provider, group]
        roles:
            edit: [remote-ai-admin]
            view: [remote-ai-admin]
        fields:
            dataset:
                type: "@django.ForeignKey"
                relation: dataset
                color: relation
                options:
                    "null": true
                    on_delete: "@django.SET_NULL"
                    editable: false
            training_percentage:
                type: "@django.FloatField"
                options:
                    "null": false
                    default: 0.7
            precision:
                type: "@django.FloatField"
                options:
                    "null": true
            recall:
                type: "@django.FloatField"
                options:
                    "null": true
            f1_score:
                type: "@django.FloatField"
                options:
                    "null": true
        meta:
            ordering_fields: [name, dataset__name]
            ordering: [name, -created]
            search_fields: [name, dataset__name]
            provider_name: remote_ai_model
            command_base: remote model

command_mixins:
    remote_ai_model:
        class: RemoteAIModelMixin
        mixins: [dataset]
        meta:
            remote_ai_model:
                data: remote_ai_model
                provider: true
                default: tdidf_svc
                priority: 2

command_base:
    remote_ai_model:
        mixins: [remote_ai_model]
        server_enabled: true
        groups_allowed: [remote-ai-admin]

command:
    remote:
        model:
            resource: remote_ai_model
            base: remote_ai_model
            base_name: remote_ai_model
            priority: 90
